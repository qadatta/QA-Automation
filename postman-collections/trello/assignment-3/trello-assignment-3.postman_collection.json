{
	"info": {
		"_postman_id": "cdf11ce6-cdd0-4592-b0a0-355296edd46f",
		"name": "trello-assignment-3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "create_board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test 1: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"pm.test(\"Test 2: New board should be created\", function () {",
							"    pm.expect(response.name).to.eql(pm.environment.get(\"boardName\"));",
							"    pm.expect(response.closed).to.eql(false)",
							"});",
							"",
							"pm.test(\"Test 3: Board should be private\", function () {",
							"    pm.expect(response.prefs.permissionLevel).to.eql(\"private\");",
							"});",
							"",
							"pm.environment.set(\"boardId\", response.id);",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var board_name = \"My board \";",
							"var last_number = 0;",
							"",
							"last_number = pm.environment.get(\"last_number\");",
							"if(isNaN(last_number))",
							"{",
							"    last_number = 0;",
							"}",
							"function getBoardName(){",
							"    ++last_number ;",
							"    ",
							"    return board_name + last_number;",
							"}",
							"",
							"pm.environment.set(\"boardName\", getBoardName());",
							"pm.environment.set(\"last_number\", last_number);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/?name={{boardName}}&defaultLabels=true&defaultLists=true&keepFromSource=none&prefs_permissionLevel=private&prefs_voting=disabled&prefs_comments=members&prefs_invitations=members&prefs_selfJoin=true&prefs_cardCovers=true&prefs_background=blue&prefs_cardAging=regular&key={{trelloKey}}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "{{boardName}}"
						},
						{
							"key": "defaultLabels",
							"value": "true"
						},
						{
							"key": "defaultLists",
							"value": "true"
						},
						{
							"key": "keepFromSource",
							"value": "none"
						},
						{
							"key": "prefs_permissionLevel",
							"value": "private"
						},
						{
							"key": "prefs_voting",
							"value": "disabled"
						},
						{
							"key": "prefs_comments",
							"value": "members"
						},
						{
							"key": "prefs_invitations",
							"value": "members"
						},
						{
							"key": "prefs_selfJoin",
							"value": "true"
						},
						{
							"key": "prefs_cardCovers",
							"value": "true"
						},
						{
							"key": "prefs_background",
							"value": "blue"
						},
						{
							"key": "prefs_cardAging",
							"value": "regular"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create TODO list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test 1: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"pm.test(\"Test 2: To do list should be created\", function () {",
							"    pm.expect(response.name).to.eql(\"TODO\");",
							"});",
							"",
							"pm.test(\"Test 3: To do list should not closed\", function () {",
							"    pm.expect(response.closed).to.eql(false);",
							"});",
							"",
							"pm.environment.set(\"TODO_list_Id\", response.id);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/:apiVersion/boards/:id/lists?name=TODO&pos=top&key={{trelloKey}}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						":apiVersion",
						"boards",
						":id",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "TODO"
						},
						{
							"key": "pos",
							"value": "top"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "apiVersion",
							"value": "1",
							"type": "string"
						},
						{
							"key": "id",
							"value": "{{boardId}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create Done list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test 1: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"pm.test(\"Test 2: To do list should be created\", function () {",
							"    pm.expect(response.name).to.eql(\"DONE\");",
							"});",
							"",
							"pm.test(\"Test 3: To do list should not closed\", function () {",
							"    pm.expect(response.closed).to.eql(false);",
							"});",
							"",
							"",
							"pm.test(\"Test 4: DONE list should be desired board\", function () {",
							"    pm.expect(response.idBoard).to.eql(pm.environment.get(\"boardId\"));",
							"});",
							"",
							"pm.environment.set(\"DONE_list_Id\", response.id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/:apiVersion/boards/:id/lists?name=DONE&pos=top&key={{trelloKey}}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						":apiVersion",
						"boards",
						":id",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "DONE"
						},
						{
							"key": "pos",
							"value": "top"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "apiVersion",
							"value": "1",
							"type": "string"
						},
						{
							"key": "id",
							"value": "{{boardId}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create card in TODO list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test 1: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"pm.test(\"Test 2: the name of the card is Learn Postman\", function () {",
							"    pm.expect(response.name).to.eql(\"Learn Postman\");",
							"});",
							"",
							"pm.test(\"Test 3: card should not be closed\", function () {",
							"    pm.expect(response.closed).to.eql(false);",
							"});",
							"",
							"pm.test(\"Test 4: card should  be created in desired TODO list\", function () {",
							"    pm.expect(response.idList).to.eql(pm.environment.get(\"TODO_list_Id\"));",
							"});",
							"",
							"pm.test(\"Test 5: card should  be created in desired board\", function () {",
							"    pm.expect(response.idBoard).to.eql(pm.environment.get(\"boardId\"));",
							"});",
							"",
							"pm.test(\"Test 6: Learn postman card does not have attachments\", function () {",
							"    pm.expect(response.badges.attachments).to.eql(0);",
							"    pm.expect(response.badges.votes).to.eql(0);",
							"});",
							"",
							"",
							"pm.environment.set(\"card_id\", response.id);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards?idList={{TODO_list_Id}}&keepFromSource=all&key={{trelloKey}}&token={{trelloToken}}&name=Learn Postman",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{TODO_list_Id}}"
						},
						{
							"key": "keepFromSource",
							"value": "all"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "name",
							"value": "Learn Postman"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "move card in DONE list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test 1: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"pm.test(\"Test 2: the name of the card is Learn Postman\", function () {",
							"    pm.expect(response.name).to.eql(\"Learn Postman\");",
							"});",
							"",
							"",
							"pm.test(\"Test 3: card should be moved to DONE list\", function () {",
							"    pm.expect(response.idList).to.eql(pm.environment.get(\"DONE_list_Id\"));",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards/:id?key={{trelloKey}}&token={{trelloToken}}&idList={{DONE_list_Id}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "idList",
							"value": "{{DONE_list_Id}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{card_id}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test 1: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"",
							"",
							"",
							"pm.test(\"Test 2: Board should be deleted\", function () {",
							"    pm.expect(response._value).to.eql(null);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/:id?key={{trelloKey}}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{boardId}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "verify board deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test 1: Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.environment.unset(\"boardId\");",
							"pm.environment.unset(\"DONE_list_Id\");",
							"pm.environment.unset(\"TODO_list_Id\");",
							"pm.environment.unset(\"card_id\");",
							"pm.environment.unset(\"boardName\");",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/:id?actions=all&boardStars=none&cards=none&card_pluginData=false&checklists=none&customFields=false&fields=name%2Cdesc%2CdescData%2Cclosed%2CidOrganization%2Cpinned%2Curl%2CshortUrl%2Cprefs%2ClabelNames&lists=open&members=none&memberships=none&membersInvited=none&membersInvited_fields=all&pluginData=false&organization=false&organization_pluginData=false&myPrefs=false&tags=false&key={{trelloKey}}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "actions",
							"value": "all"
						},
						{
							"key": "boardStars",
							"value": "none"
						},
						{
							"key": "cards",
							"value": "none"
						},
						{
							"key": "card_pluginData",
							"value": "false"
						},
						{
							"key": "checklists",
							"value": "none"
						},
						{
							"key": "customFields",
							"value": "false"
						},
						{
							"key": "fields",
							"value": "name%2Cdesc%2CdescData%2Cclosed%2CidOrganization%2Cpinned%2Curl%2CshortUrl%2Cprefs%2ClabelNames"
						},
						{
							"key": "lists",
							"value": "open"
						},
						{
							"key": "members",
							"value": "none"
						},
						{
							"key": "memberships",
							"value": "none"
						},
						{
							"key": "membersInvited",
							"value": "none"
						},
						{
							"key": "membersInvited_fields",
							"value": "all"
						},
						{
							"key": "pluginData",
							"value": "false"
						},
						{
							"key": "organization",
							"value": "false"
						},
						{
							"key": "organization_pluginData",
							"value": "false"
						},
						{
							"key": "myPrefs",
							"value": "false"
						},
						{
							"key": "tags",
							"value": "false"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{boardId}}",
							"type": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get all trello boards",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test 1: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"/*",
							"pm.environment.unset(\"boardId\");",
							"pm.environment.unset(\"DONE_list_Id\");",
							"pm.environment.unset(\"TODO_list_Id\");",
							"pm.environment.unset(\"card_id\");",
							"pm.environment.unset(\"boardName\");",
							"",
							"*/",
							"",
							"",
							"    let jsonData = pm.response.json();",
							"    console.log(\"jsonData.length \"+jsonData.length);",
							"    if(jsonData.length > 0)",
							"    {",
							"        pm.environment.set(\"boardId\", jsonData[0].id);",
							"        postman.setNextRequest(\"Delete board\");",
							"    }",
							"    ",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/members/:id/boards?filter=all&fields=all&lists=none&memberships=none&organization=false&organization_fields=name%2CdisplayName&key={{trelloKey}}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"members",
						":id",
						"boards"
					],
					"query": [
						{
							"key": "filter",
							"value": "all"
						},
						{
							"key": "fields",
							"value": "all"
						},
						{
							"key": "lists",
							"value": "none"
						},
						{
							"key": "memberships",
							"value": "none"
						},
						{
							"key": "organization",
							"value": "false"
						},
						{
							"key": "organization_fields",
							"value": "name%2CdisplayName"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "qadatta",
							"type": "string"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "trelloKey",
			"value": "enter_your_trello_key"
		},
		{
			"key": "trelloToken",
			"value": "enter_your_trello_token"
		}
	]
}
